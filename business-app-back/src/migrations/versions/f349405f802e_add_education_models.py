"""add education models

Revision ID: f349405f802e
Revises: 201fdb8e9918
Create Date: 2025-05-02 14:14:03.486805

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f349405f802e"
down_revision: Union[str, None] = "201fdb8e9918"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "course_category",
        sa.Column("name", sa.String(length=100), nullable=False, comment="Название категории курса"),
        sa.Column("description", sa.Text(), nullable=True, comment="Описание категории"),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "course",
        sa.Column("title", sa.String(length=100), nullable=False, comment="Название курса"),
        sa.Column("description", sa.Text(), nullable=True, comment="Описание курса"),
        sa.Column("is_active", sa.Boolean(), nullable=False, comment="Флаг активности курса"),
        sa.Column("category_id", sa.UUID(), nullable=False, comment="Категория курса"),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["course_category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "lesson",
        sa.Column("course_id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False, comment="Название урока"),
        sa.Column("content", sa.Text(), nullable=False, comment="Контент урока"),
        sa.Column("order", sa.Integer(), nullable=False, comment="Порядковый номер в курсе"),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["course.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_course_progress",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("course_id", sa.UUID(), nullable=False),
        sa.Column("completed_lessons", sa.Integer(), nullable=False, comment="Количество завершенных уроков"),
        sa.Column("is_completed", sa.Boolean(), nullable=False, comment="Флаг завершения курса"),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["course.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "quiz_question",
        sa.Column("lesson_id", sa.UUID(), nullable=False),
        sa.Column("question_text", sa.Text(), nullable=False, comment="Текст вопроса"),
        sa.Column("choices", sa.JSON(), nullable=False, comment="Список вариантов ответов в формате JSON"),
        sa.Column("correct_answer", sa.String(length=100), nullable=False, comment="Правильный ответ"),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["lesson.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("quiz_question")
    op.drop_table("user_course_progress")
    op.drop_table("lesson")
    op.drop_table("course")
    op.drop_table("course_category")
    # ### end Alembic commands ###
