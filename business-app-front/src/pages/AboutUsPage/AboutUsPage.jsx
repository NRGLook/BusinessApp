import React, { useState, useEffect } from 'react';
import {
    Box,
    Typography,
    Grid,
    Avatar,
    Paper,
    Stepper,
    Step,
    StepLabel,
    MobileStepper,
    Container,
    useTheme,
    Chip,
    Divider,
} from '@mui/material';
import { motion } from 'framer-motion';
import CountUp from 'react-countup';
import { TimelineDot } from '@mui/lab';
import { CodeRounded, DesignServicesRounded, CloudRounded, PsychologyRounded } from '@mui/icons-material';
import myImage from '/Users/ilya.tsikhanionak/Programming/BusinessApp/business-app-front/src/assets/images/profile.png';

const team = [
    {
        name: '–¢–∏—Ö–∞–Ω–µ–Ω–æ–∫ –ò–ª—å—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á',
        role: '–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å & Full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
        img: myImage,
        bio: '–ü–∏—à—É —á–∏—Å—Ç—ã–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∫–æ–¥ —Å 2018 –≥–æ–¥–∞. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º React, Node.js –∏ –æ–±–ª–∞—á–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π. –í–µ—Ä—é, —á—Ç–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ–ª–∂–Ω—ã –¥–µ–ª–∞—Ç—å –∂–∏–∑–Ω—å –ª—é–¥–µ–π –ª—É—á—à–µ.',
    },
];

const timeline = [
    { label: '–ù–∞—á–∞–ª –∫–∞—Ä—å–µ—Ä—É –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', date: '2018', icon: <CodeRounded /> },
    { label: '–ü–µ—Ä–≤—ã–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç', date: '2019', icon: <DesignServicesRounded /> },
    { label: '–ó–∞–ø—É—Å–∫ –æ–±–ª–∞—á–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π', date: '2021', icon: <CloudRounded /> },
    { label: '50+ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤', date: '2023', icon: <PsychologyRounded /> },
];

const stats = [
    { label: '–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤', value: 50 },
    { label: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ —Å—Ç–µ–∫–µ', value: 15 },
    { label: '–°—á–∞—Å—Ç–ª–∏–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤', value: 42 },
    { label: '–õ–µ—Ç –æ–ø—ã—Ç–∞', value: 5 },
];

const testimonials = [
    { text: '–ò–ª—å—è –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª –Ω–∞—à—É —Å–ª–æ–∂–Ω—É—é –∏–¥–µ—é –≤ —Ä–∞–±–æ—Ç–∞—é—â–∏–π –ø—Ä–æ–¥—É–∫—Ç –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –º—ã –æ–∂–∏–¥–∞–ª–∏!', author: '–°—Ç–∞—Ä—Ç–∞–ø FinTech' },
    { text: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º. –†–µ–∫–æ–º–µ–Ω–¥—É—é –∫–∞–∫ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.', author: 'IT –∫–æ–º–ø–∞–Ω–∏—è' },
    { text: '–ï–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø–æ–º–æ–≥–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—à –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ 40%.', author: '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è' },
];

const technologies = [
    'React', 'TypeScript', 'Node.js', 'AWS', 'Docker', 'MongoDB',
    'GraphQL', 'Python', 'TensorFlow', 'Kubernetes', 'PostgreSQL', 'Redis'
];

const processSteps = [
    {
        title: '–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π',
        description: '–ì–ª—É–±–æ–∫–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–π',
        icon: 'üîç'
    },
    {
        title: '–ü—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ',
        description: '–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–∫–µ—Ç–æ–≤ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏',
        icon: 'üé®'
    },
    {
        title: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        description: '–ü–æ—ç—Ç–∞–ø–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫',
        icon: 'üíª'
    },
    {
        title: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
        description: '–í—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏—è',
        icon: 'üß™'
    },
    {
        title: '–ó–∞–ø—É—Å–∫',
        description: '–î–µ–ø–ª–æ–π –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã',
        icon: 'üöÄ'
    },
    {
        title: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
        description: '–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞',
        icon: 'üõ†Ô∏è'
    },
];

export default function AboutUsPage() {
    const theme = useTheme();
    const [activeTest, setActiveTest] = useState(0);

    useEffect(() => {
        const timer = setInterval(() => {
            setActiveTest((prev) => (prev + 1) % testimonials.length);
        }, 5000);
        return () => clearInterval(timer);
    }, []);

    return (
        <Box>
            {/* Hero Section */}
            <Box
                sx={{
                    height: '100vh',
                    background: 'linear-gradient(to bottom, rgba(0, 100, 0, 0.8), rgba(0, 128, 0, 0.8))', // –¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π –∫ –æ–±—ã—á–Ω–æ–º—É –∑–µ–ª–µ–Ω–æ–º—É
                    position: 'relative',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    color: '#fff',
                    textAlign: 'center',
                }}
            >
                <motion.div
                    initial={{ opacity: 0, y: -50 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 1 }}
                    style={{ maxWidth: 800, padding: 20 }}
                >
                    <Typography
                        variant="h2"
                        gutterBottom
                        component={motion.div}
                        initial={{ scale: 0.9 }}
                        animate={{ scale: 1 }}
                        transition={{ duration: 0.8 }}
                        sx={{ fontWeight: 700, textShadow: '0 2px 10px rgba(0,0,0,0.3)' }}
                    >
                        –î–µ–ª–∞–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —á–µ–ª–æ–≤–µ—á–Ω—ã–º–∏
                    </Typography>
                    <Typography
                        variant="h5"
                        component={motion.div}
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        transition={{ delay: 0.5, duration: 1 }}
                        sx={{ mt: 3 }}
                    >
                        –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ—à–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —É–ª—É—á—à–∞—é—Ç –∂–∏–∑–Ω—å –ª—é–¥–µ–π
                    </Typography>
                </motion.div>
            </Box>

            <Container sx={{ py: 8 }}>
                {/* Mission & Vision */}
                <Grid container spacing={4} mb={8}>
                    {[
                        {
                            title: '–ù–∞—à–∞ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è',
                            text: '–ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ—á–∫–∞ –∫–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø–æ–ª—å–∑—É. –ú—ã –∏–∑–±–µ–≥–∞–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –∏ —Å–æ—Å—Ä–µ–¥–æ—Ç–∞—á–∏–≤–∞–µ–º—Å—è –Ω–∞ —Å—É—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã.',
                            icon: 'üí°'
                        },
                        {
                            title: '–ü–æ–¥—Ö–æ–¥',
                            text: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ + –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–π UX = —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–¥–µ–∏ –ø–µ—Ä–µ–¥ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π.',
                            icon: 'üöÄ'
                        },
                        {
                            title: '–û–±–µ—â–∞–Ω–∏–µ',
                            text: '–ß–µ—Å—Ç–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö. –ù–∏–∫–∞–∫–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∏–ª–∏ –Ω–µ–Ω—É–∂–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.',
                            icon: 'ü§ù'
                        },
                    ].map((item, idx) => (
                        <Grid item xs={12} md={4} key={idx}>
                            <motion.div
                                initial={{ opacity: 0, y: 50 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                transition={{ duration: 0.6, delay: idx * 0.2 }}
                            >
                                <Paper sx={{
                                    p: 4,
                                    textAlign: 'center',
                                    height: '100%',
                                    position: 'relative',
                                    overflow: 'hidden',
                                    '&:hover:before': {
                                        transform: 'scale(1.2)'
                                    },
                                    '&:before': {
                                        content: '""',
                                        position: 'absolute',
                                        width: '200%',
                                        height: '200%',
                                        background: `radial-gradient(circle, ${theme.palette.primary.light} 0%, transparent 70%)`,
                                        transition: 'transform 0.5s',
                                        top: '-50%',
                                        left: '-50%',
                                        zIndex: 0,
                                    }
                                }} elevation={3}>
                                    <Box fontSize="3rem" mb={2}>{item.icon}</Box>
                                    <Typography variant="h5" gutterBottom sx={{ position: 'relative', zIndex: 1 }}>
                                        {item.title}
                                    </Typography>
                                    <Typography variant="body1" sx={{ position: 'relative', zIndex: 1 }}>
                                        {item.text}
                                    </Typography>
                                </Paper>
                            </motion.div>
                        </Grid>
                    ))}
                </Grid>

                {/* Stats */}
                <Box mb={8}>
                    <Grid container spacing={4} justifyContent="center">
                        {stats.map((item, idx) => (
                            <Grid item xs={6} md={3} key={idx}>
                                <motion.div
                                    initial={{ scale: 0.8, opacity: 0 }}
                                    whileInView={{ scale: 1, opacity: 1 }}
                                    transition={{ duration: 0.5, delay: idx * 0.2 }}
                                    style={{ textAlign: 'center' }}
                                >
                                    <Typography variant="h3" color="primary">
                                        <CountUp end={item.value} duration={2} />+
                                    </Typography>
                                    <Typography variant="h6">{item.label}</Typography>
                                </motion.div>
                            </Grid>
                        ))}
                    </Grid>
                </Box>

                {/* Process */}
                <Box mb={8}>
                    <Typography variant="h3" gutterBottom align="center" sx={{ mb: 6 }}>
                        –ù–∞—à –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã
                    </Typography>
                    <Grid container spacing={4}>
                        {processSteps.map((step, idx) => (
                            <Grid item xs={12} sm={6} md={4} key={idx}>
                                <motion.div
                                    initial={{ opacity: 0, x: -50 }}
                                    whileInView={{ opacity: 1, x: 0 }}
                                    transition={{ delay: idx * 0.1 }}
                                >
                                    <Paper sx={{ p: 4, height: '100%', textAlign: 'center' }}>
                                        <Box fontSize="3rem" mb={2}>{step.icon}</Box>
                                        <Typography variant="h5" gutterBottom>
                                            {step.title}
                                        </Typography>
                                        <Typography variant="body1">
                                            {step.description}
                                        </Typography>
                                    </Paper>
                                </motion.div>
                            </Grid>
                        ))}
                    </Grid>
                </Box>

                {/* Timeline */}
                <Box mb={8}>
                    <Typography variant="h3" gutterBottom align="center" sx={{ mb: 6 }}>
                        –≠—Ç–∞–ø—ã —Ä–∞–∑–≤–∏—Ç–∏—è
                    </Typography>
                    <Stepper alternativeLabel>
                        {timeline.map((step, idx) => (
                            <Step key={idx} active>
                                <StepLabel
                                    icon={
                                        <motion.div
                                            whileHover={{ scale: 1.1 }}
                                            whileTap={{ scale: 0.9 }}
                                        >
                                            <TimelineDot color="primary" sx={{ width: 60, height: 60 }}>
                                                <Box fontSize="1.5rem">
                                                    {step.icon}
                                                </Box>
                                            </TimelineDot>
                                        </motion.div>
                                    }
                                >
                                    <motion.div
                                        initial={{ opacity: 0 }}
                                        animate={{ opacity: 1 }}
                                        transition={{ delay: 0.2 * idx }}
                                    >
                                        <Typography variant="h6">{step.date}</Typography>
                                        <Typography variant="body2">{step.label}</Typography>
                                    </motion.div>
                                </StepLabel>
                            </Step>
                        ))}
                    </Stepper>
                </Box>

                {/* Technologies */}
                <Box mb={8}>
                    <Typography variant="h3" gutterBottom align="center" sx={{ mb: 4 }}>
                        –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
                    </Typography>
                    <Grid container spacing={2} justifyContent="center">
                        {technologies.map((tech, idx) => (
                            <Grid item key={tech}>
                                <motion.div
                                    initial={{ scale: 0 }}
                                    whileInView={{ scale: 1 }}
                                    transition={{ delay: idx * 0.05 }}
                                >
                                    <Chip
                                        label={tech}
                                        variant="outlined"
                                        sx={{
                                            px: 2,
                                            py: 1,
                                            fontSize: '1.1rem',
                                            borderWidth: 2,
                                            '&:hover': {
                                                backgroundColor: theme.palette.primary.light,
                                                color: 'white'
                                            }
                                        }}
                                    />
                                </motion.div>
                            </Grid>
                        ))}
                    </Grid>
                </Box>

                {/* Team Section */}
                <Box mb={8}>
                    <Typography variant="h3" gutterBottom align="center" sx={{ mb: 6 }}>
                        –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å
                    </Typography>
                    <Grid container justifyContent="center" spacing={4}>
                        <Grid item xs={12} md={8}>
                            <motion.div
                                initial={{ opacity: 0, y: 50 }}
                                whileInView={{ opacity: 1, y: 0 }}
                                transition={{ duration: 0.6 }}
                                style={{ textAlign: 'center' }}
                            >
                                <Avatar
                                    src={team[0].img}
                                    alt={team[0].name}
                                    sx={{
                                        width: 280,
                                        height: 280,
                                        margin: '0 auto 32px',
                                        boxShadow: 6,
                                        border: `4px solid ${theme.palette.primary.main}`,
                                    }}
                                    component={motion.div}
                                    whileHover={{ scale: 1.05 }}
                                />
                                <Typography variant="h2" gutterBottom>
                                    {team[0].name}
                                </Typography>
                                <Typography variant="h4" color="textSecondary" gutterBottom>
                                    {team[0].role}
                                </Typography>
                                <Typography variant="h6" sx={{ maxWidth: 800, mx: 'auto', lineHeight: 1.8 }}>
                                    {team[0].bio}
                                </Typography>
                            </motion.div>
                        </Grid>
                    </Grid>
                </Box>

                {/* Testimonials */}
                <Box mb={8}>
                    <Typography variant="h3" gutterBottom align="center" sx={{ mb: 6 }}>
                        –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
                    </Typography>
                    <motion.div
                        key={activeTest}
                        initial={{ opacity: 0, x: 50 }}
                        animate={{ opacity: 1, x: 0 }}
                        exit={{ opacity: 0, x: -50 }}
                        transition={{ duration: 0.5 }}
                    >
                        <Paper
                            elevation={6}
                            sx={{ p: 6, maxWidth: 800, mx: 'auto', textAlign: 'center' }}
                        >
                            <Typography variant="h4" component="blockquote" sx={{ fontStyle: 'italic', mb: 3 }}>
                                ‚Äú{testimonials[activeTest].text}‚Äù
                            </Typography>
                            <Typography variant="h5" color="primary">
                                ‚Äî {testimonials[activeTest].author}
                            </Typography>
                            <MobileStepper
                                variant="dots"
                                steps={testimonials.length}
                                position="static"
                                activeStep={activeTest}
                                sx={{ mt: 4, justifyContent: 'center' }}
                                nextButton={null}
                                backButton={null}
                            />
                        </Paper>
                    </motion.div>
                </Box>

                {/* Footer */}
                <Box sx={{ py: 8, textAlign: 'center', color: '#777', mt: 8 }}>
                    <Divider sx={{ mb: 4 }} />
                    <Typography variant="h6">
                        ¬© {new Date().getFullYear()} –¢–∏—Ö–∞–Ω–µ–Ω–æ–∫ –ò–ª—å—è. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
                    </Typography>
                </Box>
            </Container>
        </Box>
    );
}