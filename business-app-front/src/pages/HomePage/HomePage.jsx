import React, {useEffect, useState} from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import {
    Box,
    Container,
    Typography,
    Grid,
    Button,
    Card,
    CardContent,
    useTheme,
} from '@mui/material';
import { Link } from 'react-router-dom';
import {
    Business,
    CurrencyExchange,
} from '@mui/icons-material';
import RocketLaunchIcon from '@mui/icons-material/RocketLaunch';

const DynamicHeader = () => {
    const [currentWord, setCurrentWord] = useState(0);
    const words = ['–°—Ç—Ä–æ–π—Ç–µ', '–£–ø—Ä–∞–≤–ª—è–π—Ç–µ', '–†–∞–∑–≤–∏–≤–∞–π—Ç–µ', '–ü–æ–∫–æ—Ä—è–π—Ç–µ'];

    useEffect(() => {
        const interval = setInterval(() => {
            setCurrentWord((prev) => (prev + 1) % words.length);
        }, 3000);
        return () => clearInterval(interval);
    }, [words.length]);

    return (
        <Box sx={{ position: 'relative', mb: 4 }}>
            <Typography
                variant="h1"
                sx={{
                    fontSize: { xs: '3rem', md: '4rem' },
                    fontWeight: 900,
                    lineHeight: 1.2,
                    letterSpacing: '-0.03em',
                    color: '#fff',
                    textShadow: '0 4px 12px rgba(0,0,0,0.3)',
                }}
            >
            </Typography>

            <AnimatePresence mode="wait">
                <motion.div
                    key={currentWord}
                    initial={{ y: 20, opacity: 0 }}
                    animate={{ y: 0, opacity: 1 }}
                    exit={{ y: -20, opacity: 0 }}
                    transition={{ duration: 0.5 }}
                    style={{
                        position: 'absolute',
                        bottom: -40,
                        left: 0,
                        right: 0,
                        textAlign: 'center',
                    }}
                >
                    <Typography
                        variant="h4"
                        sx={{
                            fontSize: '1.8rem',
                            fontWeight: 600,
                            color: '#FFD700',
                        }}
                    >
                        {words[currentWord]}
                    </Typography>
                </motion.div>
            </AnimatePresence>
        </Box>
    );
};

const HeroSection = () => {
    const theme = useTheme();

    return (
        <Box sx={{
            py: 10,
            position: 'relative',
            background: `linear-gradient(135deg, ${theme.palette.primary.dark} 0%, ${theme.palette.primary.main} 100%)`,
            overflow: 'hidden'
        }}>
            <MoneyAnimation side="left" />
            <MoneyAnimation side="right" />

            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∞–∫–µ—Ç–∞ */}
            <motion.div
                initial={{
                    y: 100,
                    x: -50,
                    opacity: 0,
                    rotate: -45
                }}
                animate={{
                    y: [-20, 20, -20],
                    x: [-50, -30, -50],
                    opacity: 1,
                    rotate: [-45, -35, -45]
                }}
                transition={{
                    duration: 3,
                    repeat: Infinity,
                    ease: "easeInOut"
                }}
                style={{
                    position: 'absolute',
                    left: '30%',
                    top: '20%',
                    zIndex: 1
                }}
            >
                <RocketLaunchIcon
                    sx={{
                        fontSize: 80,
                        color: '#FFD700',
                        filter: 'drop-shadow(0 4px 12px rgba(0,0,0,0.3))'
                    }}
                />
            </motion.div>
            <motion.div
                initial={{
                    y: 100,
                    x: -50,
                    opacity: 0,
                    rotate: -45
                }}
                animate={{
                    y: [-20, 20, -20],
                    x: [-50, -30, -50],
                    opacity: 1,
                    rotate: [-45, -35, -45]
                }}
                transition={{
                    duration: 3,
                    repeat: Infinity,
                    ease: "easeInOut"
                }}
                style={{
                    position: 'absolute',
                    left: '70%',
                    top: '20%',
                    zIndex: 1
                }}
            >
                <RocketLaunchIcon
                    sx={{
                        fontSize: 80,
                        color: '#FFD700',
                        filter: 'drop-shadow(0 4px 12px rgba(0,0,0,0.3))'
                    }}
                />
            </motion.div>

            <Container>
                <Box sx={{
                    textAlign: 'center',
                    maxWidth: 800,
                    mx: 'auto',
                    position: 'relative',
                    zIndex: 2
                }}>
                    <Typography
                        variant="h1"
                        sx={{
                            fontSize: { xs: '2.5rem', md: '3.5rem' },
                            fontWeight: 800,
                            color: '#fff',
                            textShadow: '0 4px 12px rgba(0,0,0,0.3)',
                            mb: 1,
                            position: 'relative',
                            display: 'inline-block'
                        }}
                    >
                        –ë–∏–∑–Ω–µ—Å –ò–º–ø–µ—Ä–∏—è
                    </Typography>

                    <Box sx={{ mb: 15 }}>
                        <DynamicHeader />
                    </Box>

                    <Button
                        component={Link}
                        to="/start"
                        variant="contained"
                        size="large"
                        sx={{
                            px: 6,
                            borderRadius: 2,
                            textTransform: 'none',
                            fontSize: '1.1rem',
                            fontWeight: 600,
                            background: 'linear-gradient(45deg, #FFD700 30%, #FFA000 90%)',
                            color: '#000',
                            '&:hover': {
                                transform: 'translateY(-2px)'
                            }
                        }}
                    >
                        –ù–∞–∂–∏–º–∞–π —Å—é–¥–∞, –µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å. –ü–æ–º–æ–∂–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è!
                    </Button>
                </Box>
            </Container>
        </Box>
    );
};

const MoneyAnimation = ({ side }) => {
    const theme = useTheme();
    const symbols = ['üíµ', 'üí∞', 'üí∏', 'ü™ô', 'ü§ë'];
    const count = 40;

    const getRandom = (min, max) => Math.random() * (max - min) + min;

    return (
        <Box sx={{
            position: 'absolute',
            width: '200px',
            height: '100%',
            [side]: 0,
            overflow: 'hidden',
            zIndex: 0,
            pointerEvents: 'none'
        }}>
            {Array.from({ length: count }).map((_, i) => {
                const pos = getRandom(0, 200);
                const rotate = getRandom(-180, 180);
                const symbol = symbols[i % symbols.length];
                return (
                    <motion.div
                        key={i}
                        initial={{
                            y: -100,
                            x: side === 'left' ? -pos : pos,
                            opacity: 0,
                            rotate
                        }}
                        animate={{
                            y: '100vh',
                            opacity: [0, 0.6, 0],
                            x: side === 'left' ? pos : -pos,
                            rotate: rotate + 360
                        }}
                        transition={{
                            duration: getRandom(6, 12),
                            delay: getRandom(0, 3),
                            repeat: Infinity,
                            ease: "linear"
                        }}
                        style={{
                            position: 'absolute',
                            fontSize: '2rem',
                            color: theme.palette.mode === 'dark' ? '#4CAF50' : '#2E7D32'
                        }}
                    >
                        {symbol}
                    </motion.div>
                );
            })}
        </Box>
    );
};

const NewsTicker = ({ items }) => {
    const [activeIndex, setActiveIndex] = React.useState(0);

    useEffect(() => {
        const interval = setInterval(() => {
            setActiveIndex(prev => (prev + 1) % items.length);
        }, 5000);
        return () => clearInterval(interval);
    }, [items.length]);

    return (
        <Box sx={{
            position: 'fixed',
            bottom: 0,
            left: 0,
            right: 0,
            bgcolor: 'background.paper',
            borderTop: '2px solid',
            borderColor: 'divider',
            zIndex: 1000
        }}>
            <Container>
                <Box sx={{
                    display: 'flex',
                    alignItems: 'center',
                    py: 2,
                    gap: 2
                }}>
                    <AnimatePresence mode='wait'>
                        <motion.div
                            key={activeIndex}
                            initial={{ x: 100, opacity: 0 }}
                            animate={{ x: 0, opacity: 1 }}
                            exit={{ x: -100, opacity: 0 }}
                            transition={{ duration: 0.5 }}
                            style={{ flexGrow: 1 }}
                        >
                            <Typography variant="body1" sx={{
                                fontWeight: 500,
                                textAlign: 'center'
                            }}>
                                {items[activeIndex]}
                            </Typography>
                        </motion.div>
                    </AnimatePresence>
                </Box>
            </Container>
        </Box>
    );
};

const BusinessCard = ({ title, description, path, icon, color, hoverMessage }) => {
    const theme = useTheme();
    const [isHovered, setIsHovered] = useState(false);

    return (
        <Grid item xs={12} md={6} maxWidth={'450px'} sx={{ display: 'flex' }}>
            <motion.div
                style={{ flexGrow: 1 }}
                whileHover={{ scale: 1.02 }}
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
                onMouseEnter={() => setIsHovered(true)}
                onMouseLeave={() => setIsHovered(false)}
                className="relative"
            >
                <Card
                    sx={{
                        height: 600,
                        display: 'flex',
                        flexDirection: 'column',
                        justifyContent: 'space-between',
                        background: `linear-gradient(45deg, ${color}20 0%, ${theme.palette.background.paper} 100%)`,
                        border: `2px solid ${color}30`,
                        borderRadius: 4,
                        overflow: 'hidden',
                        boxSizing: 'border-box',
                    }}
                >
                    <CardContent
                        sx={{
                            p: 4,
                            textAlign: 'center',
                            flexGrow: 1,
                            display: 'flex',
                            flexDirection: 'column',
                            justifyContent: 'center',
                        }}
                    >
                        <Box
                            sx={{
                                width: 140,
                                height: 140,
                                bgcolor: `${color}20`,
                                borderRadius: '50%',
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'center',
                                mx: 'auto',
                                mb: 4,
                            }}
                        >
                            {React.cloneElement(icon, {
                                sx: {
                                    fontSize: 60,
                                    color: color,
                                },
                            })}
                        </Box>

                        <Typography
                            variant="h4"
                            sx={{
                                fontWeight: 800,
                                mb: 3,
                                color: color,
                                fontSize: '2rem',
                            }}
                        >
                            {title}
                        </Typography>

                        <Typography
                            variant="body1"
                            sx={{
                                color: theme.palette.text.secondary,
                                fontSize: '1.1rem',
                                lineHeight: 1.6,
                            }}
                        >
                            {description}
                        </Typography>
                    </CardContent>

                    <Button
                        component={Link}
                        to={path}
                        variant="contained"
                        sx={{
                            m: 3,
                            py: 2,
                            borderRadius: 2,
                            fontWeight: 700,
                            fontSize: '1.1rem',
                            background: `linear-gradient(45deg, ${color} 0%, ${color}80 100%)`,
                        }}
                    >
                        –ù–∞—á–∞—Ç—å —Å–µ–π—á–∞—Å
                    </Button>
                </Card>
                <AnimatePresence>
                    {isHovered && (
                        <motion.div
                            initial={{ opacity: 0, y: 10 }}
                            animate={{ opacity: 1, y: 0 }}
                            exit={{ opacity: 0, y: 10 }}
                            transition={{ duration: 0.3 }}
                            className="absolute -top-12 left-1/2 transform -translate-x-1/2 bg-blue-600 text-white px-4 py-2 rounded-lg shadow-md"
                        >
                            {hoverMessage}
                        </motion.div>
                    )}
                </AnimatePresence>
            </motion.div>
        </Grid>
    );
};

const HomePage = () => {
    const businessTypes = [
        {
            title: '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π –ì–∏–≥–∞–Ω—Ç',
            description: '–£–∑–Ω–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å –∏–º–ø–µ—Ä–∏—é —Å –ø–æ–ª–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
            path: '/startInfo',
            icon: <Business />,
            color: '#2196F3'
        },
        {
            title: '–¶–∏—Ñ—Ä–æ–≤–∞—è –≠–∫–æ–Ω–æ–º–∏–∫–∞',
            description: '–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏ –±–ª–æ–∫—á–µ–π–Ω',
            path: '/crypto',
            icon: <CurrencyExchange />,
            color: '#4CAF50'
        },
    ];

    const newsItems = [
        'üî• –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä—É–º 2025 –æ—Ç–∫—Ä—ã—Ç –≤ –î–∞–≤–æ—Å–µ',
        'üìà –ë–∏—Ç–∫–æ–π–Ω –ø—Ä–µ–≤—ã—Å–∏–ª –æ—Ç–º–µ—Ç–∫—É –≤ $100,000',
        'üè≠ –ó–∞–ø—É—â–µ–Ω–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∫—Ä—É–ø–Ω–µ–π—à–µ–≥–æ –∑–∞–≤–æ–¥–∞ –ò–ò-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤',
        'üíº –û—Ç–∫—Ä—ã—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∞–∫—Å–µ–ª–µ—Ä–∞—Ç–æ—Ä —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –≤ –°–∏–Ω–≥–∞–ø—É—Ä–µ',
        'üöó Tesla –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –∞–≤—Ç–æ–ø–∏–ª–æ—Ç 5 —É—Ä–æ–≤–Ω—è',
        'üåç –í—Å—Ç—É–ø–∏–ª–æ –≤ —Å–∏–ª—É –Ω–æ–≤–æ–µ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ G20',
        'üí∏ –¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–π —Ä—É–±–ª—å –≤ 20 —Ä–µ–≥–∏–æ–Ω–∞—Ö',
        'üèô –ú–æ—Å–∫–≤–∞ –≤–æ—à–ª–∞ –≤ —Ç–æ–ø-10 —É–º–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –º–∏—Ä–∞',
        'üõ∞ –ü–µ—Ä–≤—ã–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π —Å–ø—É—Ç–Ω–∏–∫ 6G –≤—ã–≤–µ–¥–µ–Ω –Ω–∞ –æ—Ä–±–∏—Ç—É',
        'üìä –ò–ò-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ñ–æ–Ω–¥–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤—ã—à–ª–∞ –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –¥–æ—Å—Ç—É–ø',
        'üí≥ –ù–æ–≤—ã–π –∑–∞–∫–æ–Ω –æ –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–∞—Ö –ø—Ä–∏–Ω—è—Ç –≤ –ï–°',
        'üõ¢ –¶–µ–Ω—ã –Ω–∞ –Ω–µ—Ñ—Ç—å —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å –ø–æ—Å–ª–µ —Ä–æ—Å—Ç–∞ –≤ —è–Ω–≤–∞—Ä–µ',
        'üß† OpenAI –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ AGI-—Å–∏—Å—Ç–µ–º—É –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è',
        'üì¶ Amazon –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–π —Å–∫–ª–∞–¥ —Å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–æ–±–æ—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ª–æ–≥–∏—Å—Ç–∏–∫–æ–π',
        'üèó –ü–æ—Å—Ç—Ä–æ–µ–Ω –ø–µ—Ä–≤—ã–π –º–æ–¥—É–ª—å–Ω—ã–π –∂–∏–ª–æ–π –∫–≤–∞—Ä—Ç–∞–ª —Å –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º',
        'üõí TikTok Market —Å—Ç–∞–ª –∫—Ä—É–ø–Ω–µ–π—à–µ–π —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–æ—â–∞–¥–∫–æ–π –≤ –ê–∑–∏–∏',
        'üì° Starlink –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏–µ —Å–µ—Ç–∏ –≤ –ê—Ä–∫—Ç–∏–∫–µ',
        'üíº –ú–∏–Ω—Ñ–∏–Ω –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª –Ω–∞–ª–æ–≥–æ–≤—É—é —Ä–µ—Ñ–æ—Ä–º—É –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞',
        'üè¶ Goldman Sachs –≤–Ω–µ–¥—Ä—è–µ—Ç –ò–ò –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞–º–∏',
        'üéì –ü—Ä–∏–Ω—è—Ç–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –ø–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º—É –ò–¢-–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é',
        'üöâ Hyperloop –∑–∞–ø—É—â–µ–Ω –º–µ–∂–¥—É –õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å–æ–º –∏ –°–∞–Ω-–§—Ä–∞–Ω—Ü–∏—Å–∫–æ',
        'üì± Apple –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ iPhone 17 —Å –≥–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º –¥–∏—Å–ø–ª–µ–µ–º',
        'üöÄ SpaceX –¥–æ—Å—Ç–∞–≤–∏–ª–∞ –ø–µ—Ä–≤—ã–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –≥—Ä—É–∑ –Ω–∞ –õ—É–Ω—É',
        'üß¨ –ü—Ä–æ—Ä—ã–≤ –≤ –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö: –æ–¥–æ–±—Ä–µ–Ω–æ –ò–ò-–ª–µ–∫–∞—Ä—Å—Ç–≤–æ –æ—Ç –¥–∏–∞–±–µ—Ç–∞',
        'üí° –ö–∏—Ç–∞–π –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–µ—Ç $500 –º–ª—Ä–¥ –≤ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫—É—é —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é',
        'üõ† –Ø–Ω–¥–µ–∫—Å –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã—Ö –ò–ò',
        'üåê –ó–∞–ø—É—â–µ–Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è 100 —è–∑—ã–∫–æ–≤',
        'üìâ –ò–Ω—Ñ–ª—è—Ü–∏—è –≤ –µ–≤—Ä–æ–∑–æ–Ω–µ –¥–æ—Å—Ç–∏–≥–ª–∞ —Ä–µ–∫–æ—Ä–¥–Ω–æ –Ω–∏–∑–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è ‚Äî 1.1%',
        'üí∞ –ö—Ä–∞—É–¥—Ñ–∞–Ω–¥–∏–Ω–≥–æ–≤—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å–æ–±—Ä–∞–ª–∏ $5 –º–ª—Ä–¥ –∑–∞ 1 –∫–≤–∞—Ä—Ç–∞–ª',
        'üîã –†–µ–≤–æ–ª—é—Ü–∏—è –≤ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞—Ö: –∑–∞—Ä—è–¥–∫–∞ –∑–∞ 2 –º–∏–Ω—É—Ç—ã —Å—Ç–∞–ª–∞ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é',
        'üëæ –ö—Ä—É–ø–Ω–µ–π—à–∏–π –º–µ—Ç–∞–≤–µ—Ä—Å-–∫–æ–Ω—Ü–µ—Ä—Ç —Å–æ–±—Ä–∞–ª 30 –º–ª–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        'üèõ –í–í–ü –†–æ—Å—Å–∏–∏ –≤—ã—Ä–æ—Å –Ω–∞ 4.3% –≤ –ø–µ—Ä–≤–æ–º –∫–≤–∞—Ä—Ç–∞–ª–µ 2025',
        'üè• –ò–ò —Ç–µ–ø–µ—Ä—å —Å—Ç–∞–≤–∏—Ç –¥–∏–∞–≥–Ω–æ–∑ —Ç–æ—á–Ω–µ–µ –≤—Ä–∞—á–∞ –≤ 9 –∏–∑ 10 —Å–ª—É—á–∞–µ–≤',
        'üì¶ DHL –≤–Ω–µ–¥—Ä–∏–ª –ò–ò-–¥—Ä–æ–Ω–æ–≤ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ç—Ä—É–¥–Ω–æ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã',
        'ü™ô Ethereum –ø–µ—Ä–µ—à—ë–ª –Ω–∞ Proof-of-Stake 2.0',
        'üöÅ –ü–µ—Ä–≤—ã–π –≤–æ–∑–¥—É—à–Ω—ã–π —Ç–∞–∫—Å–∏-—Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –≤ –î—É–±–∞–µ',
        'üìâ SEC –≤–Ω–µ–¥—Ä–∏–ª–∞ –ò–ò-–∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è–º–∏',
        'üß™ –£—á—ë–Ω—ã–µ —Å–æ–∑–¥–∞–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª, —Å–∞–º–æ–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–∏–π—Å—è –ø–æ—Å–ª–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è',
        'üìö –®–∫–æ–ª—ã –≤–Ω–µ–¥—Ä—è—é—Ç –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –≤ –æ–±—É—á–µ–Ω–∏–µ',
        'üåæ –†–æ–±–æ—Ç—ã-–∞–≥—Ä–æ–Ω–æ–º—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–ª–∏ —Ñ–µ—Ä–º–µ—Ä—Å–∫–∏–µ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –≤ –°–®–ê',
        'üìç Google Maps –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –ª—é–¥–µ–π –Ω–∞ —É–ª–∏—Ü–∞—Ö',
        'üîê –ö–≤–∞–Ω—Ç–æ–≤–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤–Ω–µ–¥—Ä–µ–Ω–æ –≤ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –±–∞–Ω–∫–∞—Ö',
        'üõ´ –ê–≤–∏–∞–ø–µ—Ä–µ–≤–æ–∑–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –¥–æ —É—Ä–æ–≤–Ω—è 2019 –≥–æ–¥–∞',
        'üí° –ü—Ä–∏–Ω—è—Ç –∑–∞–∫–æ–Ω –æ –∑–∞—â–∏—Ç–µ –¥–∞–Ω–Ω—ã—Ö –≤ —ç–ø–æ—Ö—É –ò–ò –≤ –û–û–ù',
        'üèó –ù–æ–≤—ã–π –¥–µ–ª–æ–≤–æ–π –∫–≤–∞—Ä—Ç–∞–ª –ø–æ—Å—Ç—Ä–æ–µ–Ω –≤ —Ü–µ–Ω—Ç—Ä–µ –¢–æ–∫–∏–æ –∑–∞ 40 –¥–Ω–µ–π',
        'üåå –ù–ê–°–ê –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞–ª–æ –ø–∏–ª–æ—Ç–∏—Ä—É–µ–º—ã–π –ø–æ–ª—ë—Ç –Ω–∞ –ú–∞—Ä—Å –≤ 2028',
        'üñ• Intel –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –ø–µ—Ä–≤—ã–π –º–∞—Å—Å–æ–≤—ã–π –∫–≤–∞–Ω—Ç–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä',
        'üè¶ –†–æ—Å—Å–∏–π—Å–∫–∏–µ –±–∞–Ω–∫–∏ –≤–≤–æ–¥—è—Ç –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫—É—é –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –±–µ–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
        'üö≤ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥—è—Ç –Ω–∞ —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
        'üí¨ ChatGPT –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ 90% –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å–æ–≤ –≥–æ—Å—É—Å–ª—É–≥'
    ];

    return (
        <Box sx={{
            bgcolor: 'background.default',
            minHeight: '100vh',
            position: 'relative'
        }}>
            <HeroSection />

            <Container sx={{
                py: 10,
                display: 'flex',
                justifyContent: 'center'
            }}>
                <Grid
                    container
                    spacing={4}
                    sx={{
                        maxWidth: '1400px',
                        justifyContent: 'center'
                    }}
                >
                    {businessTypes.map((b, index) => (
                        <BusinessCard key={index} {...b} />
                    ))}
                </Grid>
            </Container>

            <NewsTicker items={newsItems} />
        </Box>
    );
};

export default HomePage;